<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on Jayce Wong&#39;s Blog</title>
    <link>https://sysujayce.github.io/tags/leetcode/</link>
    <description>Recent content in leetcode on Jayce Wong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 20 Oct 2019 17:18:26 +0800</lastBuildDate>
    
	<atom:link href="https://sysujayce.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>leetcode周赛：抛掷硬币</title>
      <link>https://sysujayce.github.io/posts/tosscoin/</link>
      <pubDate>Sun, 20 Oct 2019 17:18:26 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/tosscoin/</guid>
      <description>5090. 抛掷硬币 有一些不规则的硬币。在这些硬币中，prob[i] 表示第 i 枚硬币正面朝上的概率。
请对每一枚硬币抛掷 一次，然后返回正面朝上的硬币数等于 target 的概率。
示例 1：
输入：prob = [0.4], target = 1 输出：0.40000  示例 2：</description>
    </item>
    
    <item>
      <title>leetcode 1143. 最长公共子序列</title>
      <link>https://sysujayce.github.io/posts/longestcommonsubsequence/</link>
      <pubDate>Mon, 14 Oct 2019 21:40:51 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/longestcommonsubsequence/</guid>
      <description>题目描述 给定两个字符串 text1 和 text2，返回这两个字符串的最长公共子序列。
一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。 例如，&amp;rdquo;ace&amp;rdquo; 是 &amp;ldquo;abcde&amp;rdquo; 的子序列，但 &amp;ldquo;aec&amp;rdquo; 不是 &amp;ldquo;abcde&amp;rdquo; 的子序列。两个字符串的「公共子序列」是这两个字符串所共同拥有的子序列。
若这两个字符串没有公共子序列，则返回 0。
示例 1:</description>
    </item>
    
    <item>
      <title>leetcode 5：最长回文子串</title>
      <link>https://sysujayce.github.io/posts/longestpalindromeofsubstring/</link>
      <pubDate>Mon, 14 Oct 2019 21:19:16 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/longestpalindromeofsubstring/</guid>
      <description>题目描述 给定一个字符串，找出其中最长的回文子串
Example 1: Input: &amp;quot;babad&amp;quot; Output: &amp;quot;bab&amp;quot; Note: &amp;quot;aba&amp;quot; is also a valid answer. Example 2: Input: &amp;quot;cbbd&amp;quot; Output: &amp;quot;bb&amp;quot;  # -*- coding: utf-8 -*- # @Time : 2019-10-11 10:34 # @Author : Jayce Wong # @ProjectName : job # @FileName : longestPalindromicSubstring.</description>
    </item>
    
    <item>
      <title>leetcode 409. 最长回文字符串</title>
      <link>https://sysujayce.github.io/posts/longestpalindrome/</link>
      <pubDate>Mon, 14 Oct 2019 21:10:56 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/longestpalindrome/</guid>
      <description>题目描述 给定一个字符串，问其中的字符最多能组成多长的回文字符串？
Example: Input: &amp;quot;abccccdd&amp;quot; Output: 7 解释： 其中一个最长回文字符串是 &amp;quot;dccaccd&amp;quot;, 其长度为 7.  ​``` # -*- coding: utf-8 -*- # @Time : 2019-10-11 10:56 # @Author : Jayce Wong # @ProjectName : job # @FileName : longestPalindrome.</description>
    </item>
    
    <item>
      <title>leetcode 72: 最小编辑距离</title>
      <link>https://sysujayce.github.io/posts/shortesteditdistance/</link>
      <pubDate>Fri, 11 Oct 2019 23:33:58 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/shortesteditdistance/</guid>
      <description>题目描述：
给定两个单词 word1 和 word2，计算出将 word1 转换成 word2 所使用的最少操作数 。
你可以对一个单词进行如下三种操作：
插入一个字符 删除一个字符 替换一个字符 示例 1:
输入: word1 = &amp;ldquo;horse&amp;rdquo;, word2 = &amp;ldquo;ros&amp;rdquo; 输出: 3 解释: horse -&amp;gt; rorse (将 &amp;lsquo;h&amp;rsquo; 替换为 &amp;lsquo;r&amp;rsquo;) rorse -&amp;gt; rose (删除 &amp;lsquo;r&amp;rsquo;) rose -&amp;gt; ros (删除 &amp;lsquo;e&amp;rsquo;) 示例 2:</description>
    </item>
    
    <item>
      <title>leetcode 516. 最长回文子序列</title>
      <link>https://sysujayce.github.io/posts/longestpalindromicsubsequence/</link>
      <pubDate>Fri, 11 Oct 2019 22:45:57 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/longestpalindromicsubsequence/</guid>
      <description>题目描述 给定一个字符串s，找到其中最长的回文子序列
示例 1: 输入:
&amp;quot;bbbab&amp;quot;  输出:
4  一个可能的最长回文子序列为 &amp;ldquo;bbbb&amp;rdquo;。
# -*- coding: utf-8 -*- # @Time : 2019-10-11 11:58 # @Author : Jayce Wong # @ProjectName : job # @FileName : longestPalindromicSubsequence.</description>
    </item>
    
  </channel>
</rss>
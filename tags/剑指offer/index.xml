<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>剑指offer on Jayce Wong&#39;s Blog</title>
    <link>https://sysujayce.github.io/tags/%E5%89%91%E6%8C%87offer/</link>
    <description>Recent content in 剑指offer on Jayce Wong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 19 Oct 2019 00:00:55 +0800</lastBuildDate>
    
	<atom:link href="https://sysujayce.github.io/tags/%E5%89%91%E6%8C%87offer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>剑指offer：扑克牌中的顺子</title>
      <link>https://sysujayce.github.io/posts/isstraight/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:55 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/isstraight/</guid>
      <description>题目描述 从扑克牌中随机抽若干张，判断是否组成一个顺子 (straight)，即判断这些牌的数字是否是连续的。特别地，A为1，J为11，Q为12，K为13，大小王以0表示，大小王可以看作赖子(可以变成1 ~ 13中的任意数字)。
特别地，如果输入为空，返回False
# -*- coding: utf-8 -*- # @Time : 2019-10-18 23:49 # @Author : Jayce Wong # @ProjectName : job # @FileName : isStraight.</description>
    </item>
    
    <item>
      <title>剑指offer：不用加减乘除做加法</title>
      <link>https://sysujayce.github.io/posts/addwithoutelementaryarithmetic/</link>
      <pubDate>Fri, 18 Oct 2019 09:22:17 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/addwithoutelementaryarithmetic/</guid>
      <description>题目描述 写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。
# -*- coding: utf-8 -*- # @Time : 2019-10-17 20:50 # @Author : Jayce Wong # @ProjectName : job # @FileName : addWithoutElementaryArithmetic.</description>
    </item>
    
    <item>
      <title>剑指offer：不使用乘除、判断、循环进行求和</title>
      <link>https://sysujayce.github.io/posts/novelsumsolution/</link>
      <pubDate>Thu, 17 Oct 2019 11:19:11 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/novelsumsolution/</guid>
      <description>题目描述 求1+2+3+&amp;hellip;+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。
解题思路 解法1：递归 + 逻辑运算 关键在于利用逻辑与的短路规则来设置递归的出口。
这里给出我写的Python实现以及参考的C++实现
# -*- coding: utf-8 -*- # @Time : 2019-10-17 10:56 # @Author : Jayce Wong # @ProjectName : job # @FileName : sumSolution.</description>
    </item>
    
    <item>
      <title>剑指offer：和为S的连续正数序列</title>
      <link>https://sysujayce.github.io/posts/findcontinuoussequence/</link>
      <pubDate>Wed, 16 Oct 2019 14:43:45 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/findcontinuoussequence/</guid>
      <description>题目描述 小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!
输出描述:  输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序
 # -*- coding: utf-8 -*- # @Time : 2019-10-16 14:32 # @Author : Jayce Wong # @ProjectName : job # @FileName : FindContinuousSequence.</description>
    </item>
    
    <item>
      <title>剑指offer：和为s的两个数字</title>
      <link>https://sysujayce.github.io/posts/findnumberswithsum/</link>
      <pubDate>Tue, 15 Oct 2019 22:53:57 +0800</pubDate>
      
      <guid>https://sysujayce.github.io/posts/findnumberswithsum/</guid>
      <description>题目描述 输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。
输出描述:  对应每个测试案例，输出两个数，小的先输出。
 # -*- coding: utf-8 -*- # @Time : 2019-10-15 22:26 # @Author : Jayce Wong # @ProjectName : job # @FileName : FindNumbersWithSum.</description>
    </item>
    
  </channel>
</rss>